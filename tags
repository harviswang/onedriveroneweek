!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
DEVICE	led/app/unit-test.c	8;"	d	file:
DEVICE_NAME	key/driver/keys.c	20;"	d	file:
DEVICE_NAME	led/driver/leds.c	29;"	d	file:
KERNELDIR	hello/driver/Makefile	/^KERNELDIR := \/development\/linux-2.6.32.2$/;"	m
KERNELDIR	key/driver/Makefile	/^KERNELDIR ?= \/development\/linux-2.6.32.2$/;"	m
KERNELDIR	led/driver/Makefile	/^KERNELDIR := \/development\/linux-2.6.32.2$/;"	m
KERNELDIR	scull3/driver/Makefile	/^KERNELDIR ?= \/development\/linux-2.6.32.2$/;"	m
MODULE	key/driver/Makefile	/^MODULE := keys$/;"	m
MODULE	led/driver/Makefile	/^MODULE := leds$/;"	m
MODULE	scull3/driver/Makefile	/^MODULE := scull3$/;"	m
MODULE_NAME	led/driver/leds.c	28;"	d	file:
PWD	hello/driver/Makefile	/^PWD := $(shell pwd)$/;"	m
PWD	key/driver/Makefile	/^PWD := $(shell pwd)$/;"	m
PWD	led/driver/Makefile	/^PWD := $(shell pwd)$/;"	m
PWD	scull3/driver/Makefile	/^PWD := $(shell pwd)$/;"	m
__this_module	hello/driver/hello.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	key/driver/keys.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	led/driver/leds.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	scull3/driver/scull3.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__used	hello/driver/hello.mod.c	/^__used$/;"	v	file:
__used	key/driver/keys.mod.c	/^__used$/;"	v	file:
__used	led/driver/leds.mod.c	/^__used$/;"	v	file:
__used	scull3/driver/scull3.mod.c	/^__used$/;"	v	file:
access_key	scull3/driver/scull3.c	/^	unsigned int access_key; \/* sculluid, scullpriv *\/$/;"	m	struct:scull_dev	file:
button_irq_desc	key/driver/keys.c	/^struct button_irq_desc {$/;"	s	file:
button_irqs	key/driver/keys.c	/^static struct button_irq_desc button_irqs [] = {$/;"	v	typeref:struct:button_irq_desc	file:
buttons_interrupt	key/driver/keys.c	/^static irqreturn_t buttons_interrupt(int irq, void *dev_id)$/;"	f	file:
buttons_module_exit	key/driver/keys.c	/^module_exit(buttons_module_exit);$/;"	v
buttons_module_exit	key/driver/keys.c	/^static void __exit buttons_module_exit(void)$/;"	f	file:
buttons_module_init	key/driver/keys.c	/^module_init(buttons_module_init);$/;"	v
buttons_module_init	key/driver/keys.c	/^static int __init buttons_module_init(void)$/;"	f	file:
cdev	scull3/driver/scull3.c	/^	struct cdev cdev;        \/* char device struct *\/$/;"	m	struct:scull_dev	typeref:struct:scull_dev::cdev	file:
data	scull3/driver/scull3.c	/^	struct scull_qset *data;$/;"	m	struct:scull_dev	typeref:struct:scull_dev::scull_qset	file:
data	scull3/driver/scull3.c	/^	void **data;$/;"	m	struct:scull_qset	file:
dev	scull3/driver/scull3.c	/^static struct scull_dev dev;$/;"	v	typeref:struct:scull_dev	file:
dev_fops	key/driver/keys.c	/^static struct file_operations dev_fops = {$/;"	v	typeref:struct:file_operations	file:
dev_ops	led/driver/leds.c	/^static struct file_operations dev_ops = {$/;"	v	typeref:struct:file_operations	file:
device_name	led/driver/leds.c	/^static char *device_name = DEVICE_NAME;$/;"	v	file:
ev_press	key/driver/keys.c	/^static volatile int ev_press = 0;$/;"	v	file:
irq	key/driver/keys.c	/^	int irq;$/;"	m	struct:button_irq_desc	file:
key_values	key/driver/keys.c	/^static volatile char key_values [] = {'0', '0', '0', '0', '0', '0'};$/;"	v	file:
led_cfg_table	led/driver/leds.c	/^static unsigned int led_cfg_table [] = {$/;"	v	file:
led_table	led/driver/leds.c	/^static unsigned long led_table [] = {$/;"	v	file:
main	led/app/unit-test.c	/^int main(int argc, char **argv)$/;"	f
mini2440_hello_module_clean	hello/driver/hello.c	/^module_exit(mini2440_hello_module_clean);$/;"	v
mini2440_hello_module_clean	hello/driver/hello.c	/^static void __exit mini2440_hello_module_clean(void)$/;"	f	file:
mini2440_hello_module_init	hello/driver/hello.c	/^module_init(mini2440_hello_module_init);$/;"	v
mini2440_hello_module_init	hello/driver/hello.c	/^static int __init mini2440_hello_module_init(void)$/;"	f	file:
misc	key/driver/keys.c	/^static struct miscdevice misc = {$/;"	v	typeref:struct:miscdevice	file:
misc	led/driver/leds.c	/^static struct miscdevice misc = {$/;"	v	typeref:struct:miscdevice	file:
name	key/driver/keys.c	/^	char *name;$/;"	m	struct:button_irq_desc	file:
next	scull3/driver/scull3.c	/^	struct scull_qset *next;$/;"	m	struct:scull_qset	typeref:struct:scull_qset::scull_qset	file:
number	key/driver/keys.c	/^	int number;$/;"	m	struct:button_irq_desc	file:
obj-m	hello/driver/Makefile	/^obj-m := hello.o$/;"	m
obj-m	key/driver/Makefile	/^obj-m := $(MODULE).o$/;"	m
obj-m	led/driver/Makefile	/^obj-m := $(MODULE).o$/;"	m
obj-m	scull3/driver/Makefile	/^obj-m := $(MODULE).o$/;"	m
pin	key/driver/keys.c	/^	int pin;$/;"	m	struct:button_irq_desc	file:
pin_setting	key/driver/keys.c	/^	int pin_setting;$/;"	m	struct:button_irq_desc	file:
qset	scull3/driver/scull3.c	/^	int qset;    \/* sizeof(this->data->data)\/sizeof(this->data->data[0]) *\/$/;"	m	struct:scull_dev	file:
quantum	scull3/driver/scull3.c	/^	int quantum; \/* sizeof(this->data->data[0])\/sizeof(this->data->data[0][0]) *\/$/;"	m	struct:scull_dev	file:
s3c2440_leds_ioctl	led/driver/leds.c	/^static int s3c2440_leds_ioctl($/;"	f	file:
s3c2440_leds_module_exit	led/driver/leds.c	/^module_exit(s3c2440_leds_module_exit);$/;"	v
s3c2440_leds_module_exit	led/driver/leds.c	/^static void __exit s3c2440_leds_module_exit(void)$/;"	f	file:
s3c2440_leds_module_init	led/driver/leds.c	/^module_init(s3c2440_leds_module_init);$/;"	v
s3c2440_leds_module_init	led/driver/leds.c	/^static int __init s3c2440_leds_module_init(void)$/;"	f	file:
s3c24xx_buttons_close	key/driver/keys.c	/^static int s3c24xx_buttons_close(struct inode *inode, struct file *file)$/;"	f	file:
s3c24xx_buttons_open	key/driver/keys.c	/^static int s3c24xx_buttons_open(struct inode *inode, struct file *file)$/;"	f	file:
s3c24xx_buttons_poll	key/driver/keys.c	/^static unsigned int s3c24xx_buttons_poll(struct file *file, struct poll_table_struct *wait)$/;"	f	file:
s3c24xx_buttons_read	key/driver/keys.c	/^static int s3c24xx_buttons_read(struct file *filp, char __user *buff, size_t count, loff_t *offp)$/;"	f	file:
scull_dev	scull3/driver/scull3.c	/^struct scull_dev {$/;"	s	file:
scull_follow	scull3/driver/scull3.c	/^static struct scull_qset *scull_follow(struct scull_dev *dev, int item)$/;"	f	file:
scull_fops	scull3/driver/scull3.c	/^static struct file_operations scull_fops = {$/;"	v	typeref:struct:file_operations	file:
scull_major	scull3/driver/scull3.c	/^static int scull_major = 0;$/;"	v	file:
scull_minor	scull3/driver/scull3.c	/^static int scull_minor = 0;$/;"	v	file:
scull_module_exit	scull3/driver/scull3.c	/^module_exit(scull_module_exit);$/;"	v
scull_module_exit	scull3/driver/scull3.c	/^static void __exit scull_module_exit(void)$/;"	f	file:
scull_module_init	scull3/driver/scull3.c	/^module_init(scull_module_init);$/;"	v
scull_module_init	scull3/driver/scull3.c	/^static int __init scull_module_init(void)$/;"	f	file:
scull_nr_devs	scull3/driver/scull3.c	/^static int scull_nr_devs = 4;$/;"	v	file:
scull_open	scull3/driver/scull3.c	/^static int scull_open(struct inode *inode, struct file *filp)$/;"	f	file:
scull_qset	scull3/driver/scull3.c	/^static int scull_qset    = 1000;$/;"	v	file:
scull_qset	scull3/driver/scull3.c	/^struct scull_qset {$/;"	s	file:
scull_quantum	scull3/driver/scull3.c	/^static int scull_quantum = 1000;$/;"	v	file:
scull_read	scull3/driver/scull3.c	/^static ssize_t scull_read(struct file *filp, char __user *buf, size_t count, loff_t *f_pos) $/;"	f	file:
scull_release	scull3/driver/scull3.c	/^static int scull_release(struct inode *inode, struct file *filp)$/;"	f	file:
scull_setup_cdev	scull3/driver/scull3.c	/^static void scull_setup_cdev(struct scull_dev *dev, int index)$/;"	f	file:
scull_trim	scull3/driver/scull3.c	/^static int scull_trim(struct scull_dev *dev)$/;"	f	file:
scull_write	scull3/driver/scull3.c	/^static ssize_t scull_write(struct file *filp, const char __user *buf, size_t count, loff_t *f_pos)$/;"	f	file:
sem	scull3/driver/scull3.c	/^	struct semaphore sem;    \/* mutext lock *\/$/;"	m	struct:scull_dev	typeref:struct:scull_dev::semaphore	file:
size	scull3/driver/scull3.c	/^	unsigned long size;      \/* used size *\/$/;"	m	struct:scull_dev	file:
